(window.webpackJsonp=window.webpackJsonp||[]).push([[66],{803:function(e,t,r){"use strict";r.r(t);var s=r(8),a=Object(s.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("blockquote",[r("p",[e._v("本文转载自 "),r("a",{attrs:{href:"https://ohdear.app/blog/transitioning-from-laravel-echo-server-to-laravel-websockets",target:"_blank",rel:"noopener noreferrer"}},[e._v("ohdear"),r("OutboundLink")],1)])]),e._v(" "),r("p",[e._v("我们刚刚从基于"),r("a",{attrs:{href:"https://github.com/tlaverdure/laravel-echo-server",target:"_blank",rel:"noopener noreferrer"}},[e._v("laravel-echo-server"),r("OutboundLink")],1),e._v("的websocket服务器过渡到完全由PHP驱动"),r("a",{attrs:{href:"https://github.com/tlaverdure/laravel-echo-server",target:"_blank",rel:"noopener noreferrer"}},[e._v("的服务器"),r("OutboundLink")],1),e._v("："),r("a",{attrs:{href:"https://github.com/beyondcode/laravel-websockets",target:"_blank",rel:"noopener noreferrer"}},[e._v("laravel-websockets"),r("OutboundLink")],1),e._v("。在这篇文章中，我们将重点介绍我们为何以及如何采取这一举措。")]),e._v(" "),r("h2",{attrs:{id:"简化我们的堆栈"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#简化我们的堆栈"}},[e._v("#")]),e._v(" 简化我们的堆栈")]),e._v(" "),r("p",[e._v("由于我们是在"),r("a",{attrs:{href:"https://laravel.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Laravel"),r("OutboundLink")],1),e._v("上"),r("a",{attrs:{href:"https://laravel.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("构建的"),r("OutboundLink")],1),e._v("，因此在构建阶段我们已经运行了相当多的nodejs。我们的前端JavaScript和CSS已经通过"),r("a",{attrs:{href:"https://laravel.com/docs/5.7/mix",target:"_blank",rel:"noopener noreferrer"}},[e._v("webpack"),r("OutboundLink")],1),e._v("编译。所以在某种程度上，我们的堆栈已经包括"),r("code",[e._v("node")]),e._v("使这一切都发生。")]),e._v(" "),r("p",[e._v("我们流畅的用户体验（如果我们自己这样说;-)）的一部分来自于websockets的使用，这使我们能够在他们的仪表板和我们的"),r("a",{attrs:{href:"https://ohdear.app/",target:"_blank",rel:"noopener noreferrer"}},[e._v("主页中"),r("OutboundLink")],1),e._v("为我们的用户提供即时反馈。为了做到这一点，我们总是使用"),r("a",{attrs:{href:"https://github.com/tlaverdure/laravel-echo-server",target:"_blank",rel:"noopener noreferrer"}},[e._v("laravel-echo-server"),r("OutboundLink")],1),e._v("，"),r("code",[e._v("node")]),e._v("一个websocket服务器的实现。")]),e._v(" "),r("p",[e._v("要使websocket服务器正常工作，您可以使用2种方法：使用Redis队列或直接通过HTTP发布消息。我们使用了Redis队列，这意味着我们发生了以下事件：")]),e._v(" "),r("ol",[r("li",[e._v("Laravel向Redis频道发布消息")]),e._v(" "),r("li",[e._v("echo-server侦听存储在那里的新事件")]),e._v(" "),r("li",[e._v("echo-server将这些中继到其订户/客户端")])]),e._v(" "),r("p",[e._v("这对我们来说非常有效，没有任何问题。")]),e._v(" "),r("p",[e._v("但我们发现自己处于测试更简单方法的独特位置：在PHP中完全运行websocket服务器而无需节点。")]),e._v(" "),r("h2",{attrs:{id:"转向php"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#转向php"}},[e._v("#")]),e._v(" 转向PHP")]),e._v(" "),r("p",[e._v("我们最初的反应是“ "),r("em",[e._v("但是，当然，PHP无法处理Node进程的负载，对吧？")]),e._v(" ”。")]),e._v(" "),r("p",[e._v("好吧，为了开始我们"),r("a",{attrs:{href:"https://ma.ttias.be/benchmarking-websocket-server-performance-with-artillery",target:"_blank",rel:"noopener noreferrer"}},[e._v("使用Artillery对laravel-websockets包进行基准测试"),r("OutboundLink")],1),e._v("。我们发现PHP中的websocket实现可以非常轻松地处理我们的负载并保持低于50MB的内存消耗。")]),e._v(" "),r("p",[e._v("在我们的测试过程中，性能与节点实现相似。")]),e._v(" "),r("p",[e._v("由于我们没有丢失任何东西，我们专注于删除我们的生产机器的节点依赖，并在PHP中运行整个websocket堆栈。")]),e._v(" "),r("h2",{attrs:{id:"添加tls和主管"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#添加tls和主管"}},[e._v("#")]),e._v(" 添加TLS和主管")]),e._v(" "),r("p",[e._v("我们的设置已经使用Nginx作为TLS代理以及Supervisor来保持所有工作人员的运行，因此我们已经有了构建块来为我们的新websocket服务器添加一些配置。")]),e._v(" "),r("p",[e._v("我们"),r("a",{attrs:{href:"https://ma.ttias.be/deploying-laravel-websockets-with-nginx-reverse-proxy-and-supervisord",target:"_blank",rel:"noopener noreferrer"}},[e._v("配置了Nginx和Supervisor"),r("OutboundLink")],1),e._v("来处理TLS部分和工作运行非常快。")]),e._v(" "),r("h2",{attrs:{id:"从laravel-echo-server转换到laravel-websockets"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#从laravel-echo-server转换到laravel-websockets"}},[e._v("#")]),e._v(" 从laravel-echo-server转换到laravel-websockets")]),e._v(" "),r("p",[e._v("代码方面，改变是一块蛋糕。除非我们忘记某些事情，否则它包括：")]),e._v(" "),r("ul",[r("li",[e._v("删除"),r("code",[e._v("/js/socket.io.js")]),e._v("我们前端的所有引用（我们的websockets 不再需要"),r("a",{attrs:{href:"https://socket.io/docs/client-api/",target:"_blank",rel:"noopener noreferrer"}},[e._v("socket.io"),r("OutboundLink")],1),e._v("）")]),e._v(" "),r("li",[e._v("安装"),r("a",{attrs:{href:"https://github.com/beyondcode/laravel-websockets",target:"_blank",rel:"noopener noreferrer"}},[e._v("laravel-websockets"),r("OutboundLink")],1),e._v("并按照其安装说明进行操作")]),e._v(" "),r("li",[e._v("将我们的前端代码从使用socket.io更改为pusher")])]),e._v(" "),r("div",{staticClass:"language-js line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-js"}},[r("code",[e._v("     window"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("Echo "),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("new")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("Echo")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("        broadcaster"),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[e._v("'socket.io'")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("+")]),e._v("        broadcaster"),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[e._v("'pusher'")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n         key"),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" window"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("pusherKey"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("        host"),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" window"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("pusherHost"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("+")]),e._v("        wsHost"),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" window"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("pusherHost"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("+")]),e._v("        wsPort"),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" window"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("pusherPort"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("+")]),e._v("        disableStats"),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n     "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br"),r("span",{staticClass:"line-number"},[e._v("2")]),r("br"),r("span",{staticClass:"line-number"},[e._v("3")]),r("br"),r("span",{staticClass:"line-number"},[e._v("4")]),r("br"),r("span",{staticClass:"line-number"},[e._v("5")]),r("br"),r("span",{staticClass:"line-number"},[e._v("6")]),r("br"),r("span",{staticClass:"line-number"},[e._v("7")]),r("br"),r("span",{staticClass:"line-number"},[e._v("8")]),r("br"),r("span",{staticClass:"line-number"},[e._v("9")]),r("br")])]),r("ul",[r("li",[e._v("将我们的广播驱动程序从Redis更改为使用Pusher "),r("code",[e._v(".env")])])]),e._v(" "),r("div",{staticClass:"language-env line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("- BROADCAST_DRIVER=redis\n+ BROADCAST_DRIVER=pusher\n+ PUSHER_ENDPOINT=socket.ohdear.app\n+ PUSHER_ENDPOINT_SCHEME=https\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br"),r("span",{staticClass:"line-number"},[e._v("2")]),r("br"),r("span",{staticClass:"line-number"},[e._v("3")]),r("br"),r("span",{staticClass:"line-number"},[e._v("4")]),r("br")])]),r("p",[e._v("这足以让我们转向"),r("a",{attrs:{href:"https://github.com/beyondcode/laravel-websockets",target:"_blank",rel:"noopener noreferrer"}},[e._v("laravel-websockets"),r("OutboundLink")],1),e._v("。")]),e._v(" "),r("h2",{attrs:{id:"我们获得了什么"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#我们获得了什么"}},[e._v("#")]),e._v(" 我们获得了什么？")]),e._v(" "),r("p",[e._v("其最大的收获之一是在我们的开发过程中：我们现在只需要运行"),r("code",[e._v("php artisan websocket:serve")]),e._v("以获得本地websocket服务器，而不必处理laravel-echo-server的（相当令人困惑的）配置。")]),e._v(" "),r("p",[e._v("此外，我们简化了服务器设置，现在完全依赖没有Node的PHP来运行websockets。管理较少的软件总是一个胜利，特别是从安全角度（跟踪节点生态系统和echo-server的依赖关系）。")]),e._v(" "),r("p",[e._v("对我们来说，进行转换是明智的选择。")])])}),[],!1,null,null,null);t.default=a.exports}}]);