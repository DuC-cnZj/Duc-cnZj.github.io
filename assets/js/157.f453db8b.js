(window.webpackJsonp=window.webpackJsonp||[]).push([[157],{906:function(t,e,s){"use strict";s.r(e);var n=s(6),a=Object(n.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"清理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#清理"}},[t._v("#")]),t._v(" 清理")]),t._v(" "),s("ol",[s("li",[t._v("/var/lib/kubelet 目录")]),t._v(" "),s("li",[t._v("移除本地 etcd 数据和节点")]),t._v(" "),s("li",[t._v("systemctl stop kubelet")]),t._v(" "),s("li",[t._v("移除上面所有的容器")]),t._v(" "),s("li",[t._v("csi socket")])]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('/etc/kubernetes/pki\n// CRISocketContainerd is the containerd CRI endpoint\nCRISocketContainerd = "unix:///var/run/containerd/containerd.sock"\n// CRISocketCRIO is the cri-o CRI endpoint\nCRISocketCRIO = "unix:///var/run/crio/crio.sock"\n// CRISocketDocker is the cri-dockerd CRI endpoint\nCRISocketDocker = "unix:///var/run/cri-dockerd.sock"\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("ol",{attrs:{start:"6"}},[s("li",[t._v("Root less 模式启动还会清理 用户和组")])]),t._v(" "),s("h2",{attrs:{id:"没有清理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#没有清理"}},[t._v("#")]),t._v(" 没有清理")]),t._v(" "),s("p",[t._v("iptable/ipvs\n/etc/cni/net.d")])])}),[],!1,null,null,null);e.default=a.exports}}]);